apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'application'

ext.repositoryURL = 'http://cloud-repo.prosrm.com:8081/artifactory'
ext.env = System.getenv()
ext.buildNumber = env.BUILD_NUMBER?env.BUILD_NUMBER:0.1

sourceCompatibility = 1.6

archivesBaseName = 'nebula-ppss'
version = '0.1-SNAPSHOT'
group = 'com.pros'

repositories {
	mavenRepo(name: 'remoteRepo', url: repositoryURL + '/repo')
	//	mavenCentral()
}

configurations.all { resolutionStrategy.cacheChangingModulesFor 1, 'minutes' }

dependencies {

	compile 'org.projectlombok:lombok:0.11.4'
	compile 'com.yammer.dropwizard:dropwizard-client:0.6.1'
	//For JSON
	compile 'org.codehaus.jettison:jettison:1.1'
	testCompile 'junit:junit:4.+'
	testCompile 'org.mockito:mockito-core:1.9.5+'
}

distZip {
	archiveName(archivesBaseName + ".zip")
}

jar {
   from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
   exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}

task nebulappssplugin(dependsOn: build) << {
	ant {
		mkdir dir: 'nebula-ppss'
		copy(todir: "nebula-ppss") {
			fileset(dir: ".", includes: 'bin/**')
			fileset(dir: ".", includes: 'config/**')
			fileset(dir: "build", includes: 'libs/**')
		}
		zip(destfile: 'nebula-ppss.zip') {
			fileset(dir: 'nebula-ppss')
		}
		delete dir: 'nebula-ppss'
	}
}
